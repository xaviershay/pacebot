<html>
<head>
  <title>Pacebot</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet">
  <link rel='icon' type='image/png' href='/running.png'>
  <style>
  a {
    color: #333;
    text-decoration: underline;
  }
  footer {
    margin-top: 2em;
    font-size: 80%;
    opacity: 0.5;
  }
  </style>
</head>
<body>
  <div class='container'>
    <div class='row'>
      <div class='col-lg-offset-3 col-lg-5 col-md-offset-3 col-md-6 col-xs-12'>
        <h1>Pacebot</h1>
        <form class='form'>
          <input id='pace-input' placeholder='Type here!' style='font-family: monospace' />
        </form>
        <div>
          <code id='pace-output'>Pacebot does not understand the input :[</code>
        </div>
        <h3>Examples <small>Click to try!</small></h3>
        <pre class='examples'><code><a href='#'>4:00 miles</a>     →  4:00 mile = 2:29 km = 60s lap
<a href='#'>3:10 kms</a>       →  3:10 km = 5:05 mile = 76s lap
<a href='#'>3 mi @ 4:20</a>    →  3.0mi @ 4:20 pace = 13:00
<a href='#'>3 mi in 12:50</a>  →  3.0mi @ 4:17 pace = 12:50</code></pre>
        <footer>
          Made by <a href='https://github.com/xaviershay/pacebot'>Xavier Shay</a>.
          Pull requests welcome!</footer>
      </div>
    </div>
  </div>
  <script src='http://code.jquery.com/jquery-2.1.4.min.js'></script>
  <script src='/pacebot.js'></script>
  <script>
    // http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript
    function getParameterByName(name) {
      name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
          results = regex.exec(location.search);
      return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    $(function() {
      var output = function(text) {
        $('#pace-output').text(text)
      }

      var currentInput = getParameterByName("q")

      var update = function(e) {
        var input = $(this).val()
        resp = Opal.get("Pacebot").$new().$parse(input)
        var text = resp.$to_s()
        if (text.length > 0) {
          output(text)
          title = input + ' - Pacebot'

          if (currentInput != input) {
            window.history.pushState(
              {
                title: title,
                input: input,
                output: text
              },
              null,
              "/?" + $.param({q: input})
            )
          } else {
            window.history.replaceState(
              {
                title: title,
                input: input,
                output: text
              },
              null,
              "/?" + $.param({q: input})
            )
          }
          currentInput = input
          $(document).prop('title', title)
        } else {
          output('Pacebot does not understand the input :[')
        }
      }
      $("#pace-input").keyup(update).change(update)
      $('.examples a').click(function(e) {
        e.preventDefault()
        $('#pace-input').val($(this).text()).trigger('change')
      }).each(function() {
        $(this).attr('href', "/?" + $.param({q: $(this).text()}))
      })
      if (currentInput) {
        $('#pace-input').val(currentInput).trigger('change')
      }
      window.addEventListener("popstate", function(e) {
        if (e.state) {
          e = e.state
          $(document).prop('title', e.title)
          $('#pace-input').val(e.input)
          output(e.output)
        } else {
          window.location = window.location
        }
      })
    })
  </script>
</body>
